# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'testUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import matplotlib
matplotlib.use("Qt5Agg")  # 声明使用QT5
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.figure import Figure
import matplotlib.pyplot as plt


from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas

class TEST(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(630, 390)
        Form.setMinimumSize(QtCore.QSize(630, 390))
        Form.setMaximumSize(QtCore.QSize(630, 390))#界面大小固定，不得拖拽改变

        #堆栈控件放置8个界面
        self.stackedWidget = QtWidgets.QStackedWidget(Form)
        self.stackedWidget.setGeometry(QtCore.QRect(0, 0, 630, 390))
        self.stackedWidget.setMinimumSize(QtCore.QSize(630, 390))
        self.stackedWidget.setMaximumSize(QtCore.QSize(630, 390))
        self.stackedWidget.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.stackedWidget.setStyleSheet("stackedWidget{\n"
"background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.537, fx:0.5, fy:0.494, stop:0.253731 rgba(255, 111, 157, 255), stop:1 rgba(255, 255, 255, 189));\n"
"border:none;\n"
"border-bottom-left-radius: 20px;\n"
"border-bottom-right-radius:20px;}")
        self.stackedWidget.setObjectName("stackedWidget")

        #首页设置
        self.home = QtWidgets.QWidget()
        self.home.setStyleSheet("#home{\n"
"background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.537, fx:0.5, fy:0.494, stop:0.253731 rgba(255, 111, 157, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-left:1px solid lightgray;\n"
"border-right:1px solid lightgray;\n"
"border-bottom:1px solid lightgray;\n"
"border-bottom-left-radius: 20px;\n"
"border-bottom-right-radius: 20px;\n"
"}")
        self.home.setObjectName("home")

        ##开始按钮
        self.Start = QtWidgets.QPushButton(self.home)
        self.Start.setGeometry(QtCore.QRect(30, 119, 571, 140))
        font = QtGui.QFont()
        font.setFamily("Segoe Print")
        font.setPointSize(65)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.Start.setFont(font)
        self.Start.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Start.setStyleSheet("color: rgb(255, 255, 127);\n"
"font: 75 65pt \"Segoe Print\";\n"
"background-color: transparent;\n"
"")
        self.Start.setCheckable(True)
        self.Start.setAutoExclusive(True)
        self.Start.setObjectName("Start")

        ##工具按钮(工具页单独成页)
        self.Tool = QtWidgets.QPushButton(self.home)
        self.Tool.setGeometry(QtCore.QRect(257, 280, 115, 65))
        self.Tool.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Tool.setStyleSheet("image: url(:/pic/resource/support--v1.png);\n"
"background-color: transparent;\n"
"color: rgb(67, 67, 67);\n"
"font: 13pt \"华光淡古印_CNKI\";\n"
"image-position:left;\n"
"text-align:right;")
        self.Tool.setCheckable(True)
        self.Tool.setAutoExclusive(True)
        self.Tool.setObjectName("Tool")

        self.label = QtWidgets.QLabel(self.home)
        self.label.setGeometry(QtCore.QRect(440, 150, 91, 81))
        self.label.setStyleSheet("image: url(:/pic/resource/dog-footprint.png);")
        self.label.setText("")
        self.label.setObjectName("label")

        self.label_5 = QtWidgets.QLabel(self.home)
        self.label_5.setGeometry(QtCore.QRect(280, 50, 71, 71))
        self.label_5.setObjectName("label_5")
        self.stackedWidget.addWidget(self.home)


        # 第一页设置
        self.page_1 = QtWidgets.QWidget()
        self.page_1.setStyleSheet("#page_1{\n"
"background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.537, fx:0.5, fy:0.494, stop:0.253731 rgba(255, 111, 157, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-left:1px solid lightgray;\n"
"border-right:1px solid lightgray;\n"
"border-bottom:1px solid lightgray;\n"
"border-bottom-left-radius: 20px;\n"
"border-bottom-right-radius: 20px;}")
        self.page_1.setObjectName("page_1")

        self.label_1 = QtWidgets.QLabel(self.page_1)
        self.label_1.setGeometry(QtCore.QRect(90, 80, 251, 31))
        self.label_1.setStyleSheet("color: rgb(67, 67, 67);\n"
"font: 11pt \"华光淡古印_CNKI\";")
        self.label_1.setObjectName("label_1")

        #输入首音符
        self.EditNote = QtWidgets.QLineEdit(self.page_1)
        self.EditNote.setGeometry(QtCore.QRect(150, 175, 330, 40))
        self.EditNote.setStyleSheet("gridline-color: rgb(0, 0, 0);")
        self.EditNote.setObjectName("EditNote")

        ##这个按钮实现界面跳转和后续音符生成两个功能
        self.next_1 = QtWidgets.QPushButton(self.page_1)
        self.next_1.setGeometry(QtCore.QRect(530, 150, 80, 80))
        self.next_1.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.next_1.setStyleSheet("image:url(:/pic/resource/dog-bone.png);\n"
"background-color: transparent;\n"
"font: 15pt \"HGDY_CNKI\";\n"
"color: rgb(255, 255, 255);")
        self.next_1.setCheckable(True)
        self.next_1.setAutoExclusive(True)
        self.next_1.setObjectName("next_1")

        # 返回上一页（首页）
        self.BackHome = QtWidgets.QPushButton(self.page_1)
        self.BackHome.setGeometry(QtCore.QRect(20, 150, 80, 80))
        self.BackHome.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.BackHome.setStyleSheet("image: url(:/pic/resource/dog-bowl.png);\n"
"background-color: transparent;\n"
"font: 15pt \"HGDY_CNKI\";\n"
"color: rgb(255, 255, 255);")
        self.BackHome.setCheckable(True)
        self.BackHome.setAutoExclusive(True)
        self.BackHome.setObjectName("BackHome")

        self.label_7 = QtWidgets.QLabel(self.page_1)
        self.label_7.setGeometry(QtCore.QRect(400, 110, 131, 71))
        self.label_7.setStyleSheet("image: url(:/pic/resource/dog--v3.png);")
        self.label_7.setText("")
        self.label_7.setObjectName("label_7")
        self.stackedWidget.addWidget(self.page_1)


        #第二页设置
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setStyleSheet("#page_2{\n"
"background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.537, fx:0.5, fy:0.494, stop:0.253731 rgba(255, 111, 157, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-left:1px solid lightgray;\n"
"border-right:1px solid lightgray;\n"
"border-bottom:1px solid lightgray;\n"
"border-bottom-left-radius: 20px;\n"
"border-bottom-right-radius: 20px;}")
        self.page_2.setObjectName("page_2")

        self.label_2 = QtWidgets.QLabel(self.page_2)
        self.label_2.setGeometry(QtCore.QRect(70, 20, 151, 41))
        self.label_2.setStyleSheet("color: rgb(67, 67, 67);\n"
"font: 11pt \"华光淡古印_CNKI\";")
        self.label_2.setObjectName("label_2")

        ##后续音符呈现
        self.ShowNotes = QtWidgets.QTextBrowser(self.page_2)
        self.ShowNotes.setGeometry(QtCore.QRect(115, 70, 400, 250))
        self.ShowNotes.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.ShowNotes.setStyleSheet("background-color:TRANSPARENT;\n"
"border: 10px solid  rgb(255, 255, 255);\n"
"border-radius:18px;")
        self.ShowNotes.setObjectName("ShowNotes")

        ##滚动条
        self.ScrollBar_2 = self.ShowNotes.verticalScrollBar()
        self.ScrollBar_2.setGeometry(QtCore.QRect(500, 70, 20, 250))
        self.ScrollBar_2.setBaseSize(QtCore.QSize(2, 0))
        self.ScrollBar_2.setStyleSheet("\n"
"#ScrollBar_2:vertical{background-color:transparent;width:30px;height:255px;padding-top:15px;padding-bottom:15px;}   \n"
"\n"
"#ScrollBar_2::add-page:vertical{background-color:transparent;}       \n"
"#ScrollBar_2::sub-page:vertical{\n"
"    \n"
"    background-color: qlineargradient(spread:reflect, x1:0.0198706, y1:0, x2:0.955, y2:0.523, stop:0.402985 rgba(255, 255, 255, 195), stop:1 rgba(255, 85, 127, 195));\n"
"border-radius:10px;}\n"
"\n"
"\n"
"\n"
"#ScrollBar_2::handle:vertical{\n"
"image: url(:/pic/resource/pixel-heart.png);\n"
"}\n"
"\n"
"\n"
"#ScrollBar_2::sub-line:vertical{background:none;}\n"
"\n"
"#ScrollBar_2::add-line:vertical{background:none;}\n"
"\n"
"")
        self.ScrollBar_2.setOrientation(QtCore.Qt.Vertical)
        self.ScrollBar_2.setObjectName("ScrollBar_2")

        self.back_2 = QtWidgets.QPushButton(self.page_2)
        self.back_2.setGeometry(QtCore.QRect(20, 150, 80, 80))
        self.back_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.back_2.setStyleSheet("image: url(:/pic/resource/dog-bone.png);\n"
"background-color: transparent;\n"
"font: 15pt \"HGDY_CNKI\";\n"
"color: rgb(255, 255, 255);")
        self.back_2.setCheckable(True)
        self.back_2.setAutoExclusive(True)
        self.back_2.setObjectName("back_2")

        self.next_2 = QtWidgets.QPushButton(self.page_2)
        self.next_2.setGeometry(QtCore.QRect(530, 150, 80, 80))
        self.next_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.next_2.setStyleSheet("image: url(:/pic/resource/dog-bone.png);\n"
"background-color: transparent;\n"
"font: 15pt \"HGDY_CNKI\";\n"
"color: rgb(255, 255, 255);")
        self.next_2.setCheckable(True)
        self.next_2.setAutoExclusive(True)
        self.next_2.setObjectName("next_2")

        self.label_4 = QtWidgets.QLabel(self.page_2)
        self.label_4.setGeometry(QtCore.QRect(530, 320, 71, 51))
        self.label_4.setStyleSheet("image: url(:/pic/resource/19440-200.png);")
        self.label_4.setText("")
        self.label_4.setObjectName("label_4")
        self.stackedWidget.addWidget(self.page_2)


        #第三页设置
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setStyleSheet("#page_3{\n"
"    background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.537, fx:0.5, fy:0.494, stop:0.253731 rgba(255, 111, 157, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-left:1px solid lightgray;\n"
"border-right:1px solid lightgray;\n"
"border-bottom:1px solid lightgray;\n"
"border-bottom-left-radius: 20px;\n"
"border-bottom-right-radius: 20px;}")
        self.page_3.setObjectName("page_3")

        ##选择路径保存txt
        self.SaveT = QtWidgets.QCommandLinkButton(self.page_3)
        self.SaveT.setGeometry(QtCore.QRect(190, 160, 250, 70))
        self.SaveT.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SaveT.setStyleSheet("#SaveT{font: 25pt \"华光中圆_CNKI\";\n"
"background-color：transparent;}\n"
"#SaveT:hover{\n"
"    font: 25pt \"华光中圆_CNKI\";\n"
"background-color：transparent;\n"
"    text-decoration: underline;}\n"
"")
        self.SaveT.setObjectName("SaveT")

        self.label_3 = QtWidgets.QLabel(self.page_3)
        self.label_3.setGeometry(QtCore.QRect(60, 60, 81, 21))
        self.label_3.setStyleSheet("color: rgb(67, 67, 67);\n"
"font: 11pt \"华光淡古印_CNKI\";")
        self.label_3.setObjectName("label_3")

         ##下一页按钮
        # click信号发出要完成事件（1）界面跳转（2）TXT文件评价并后台交互结果给page_4:ShowEva
        self.next_3 = QtWidgets.QPushButton(self.page_3)
        self.next_3.setGeometry(QtCore.QRect(530, 150, 80, 80))
        self.next_3.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.next_3.setStyleSheet("image: url(:/pic/resource/dog-bone.png);\n"
"background-color: transparent;\n"
"font: 15pt \"HGDY_CNKI\";\n"
"color: rgb(255, 255, 255);")
        self.next_3.setCheckable(True)
        self.next_3.setAutoExclusive(True)
        self.next_3.setObjectName("next_3")

        self.back_3 = QtWidgets.QPushButton(self.page_3)
        self.back_3.setGeometry(QtCore.QRect(20, 150, 80, 80))
        self.back_3.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.back_3.setStyleSheet("image: url(:/pic/resource/dog-bone.png);\n"
"background-color: transparent;\n"
"font: 15pt \"HGDY_CNKI\";\n"
"color: rgb(255, 255, 255);")
        self.back_3.setCheckable(True)
        self.back_3.setAutoExclusive(True)
        self.back_3.setObjectName("back_3")

        ##保存成功标识（选择完路径保存后再弹出）
        self.sign_6 = QtWidgets.QLabel(self.page_3)
        self.sign_6.setGeometry(QtCore.QRect(285, 270, 61, 51))
        self.sign_6.setStyleSheet("image: url(:/pic/resource/checkmark.png);")
        self.sign_6.setText("")
        self.sign_6.setObjectName("sign_6")
        self.stackedWidget.addWidget(self.page_3)


        #第4页设置
        self.page_4 = QtWidgets.QWidget()
        self.page_4.setStyleSheet("#page_4{\n"
"    background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.537, fx:0.5, fy:0.494, stop:0.253731 rgba(255, 111, 157, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-left:1px solid lightgray;\n"
"border-right:1px solid lightgray;\n"
"border-bottom:1px solid lightgray;\n"
"border-bottom-left-radius: 20px;\n"
"border-bottom-right-radius: 20px;}")
        self.page_4.setObjectName("page_4")

        self.lable_4 = QtWidgets.QLabel(self.page_4)
        self.lable_4.setGeometry(QtCore.QRect(70, 30, 201, 21))
        self.lable_4.setStyleSheet("color: rgb(67, 67, 67);\n"
"font: 11pt \"华光淡古印_CNKI\";")
        self.lable_4.setObjectName("lable_4")

        ##评价结果
        """self.ShowEva = QtWidgets.QTextBrowser(self.page_4)
        self.ShowEva.setGeometry(QtCore.QRect(115, 70, 400, 250))
        self.ShowEva.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.ShowEva.setStyleSheet("background-color:transparent;\n"
"border: 10px solid  rgb(255, 255, 255);\n"
"border-radius:18px;")
        self.ShowEva.setObjectName("ShowEva")

        self.ScrollBar_4 = self.ShowEva.verticalScrollBar()
        self.ScrollBar_4.setGeometry(QtCore.QRect(500, 70, 20, 250))
        self.ScrollBar_4.setStyleSheet("\n"
"#ScrollBar_4:vertical{background-color:transparent;width:30px;height:255px;padding-top:15px;padding-bottom:15px;}   \n"
"\n"
"#ScrollBar_4::add-page:vertical{background-color:transparent;}       \n"
"#ScrollBar_4::sub-page:vertical{\n"
"    \n"
"    background-color: qlineargradient(spread:reflect, x1:0.0198706, y1:0, x2:0.955, y2:0.523, stop:0.402985 rgba(255, 255, 255, 195), stop:1 rgba(255, 85, 127, 195));\n"
"border-radius:10px;\n"
"}\n"
"\n"
"\n"
"\n"
"#ScrollBar_4::handle:vertical{\n"
"image: url(:/pic/resource/pixel-heart.png);\n"
"}\n"
"\n"
"\n"
"#ScrollBar_4::sub-line:vertical{background:none;}\n"
"\n"
"#ScrollBar_4::add-line:vertical{background:none;}\n"
"\n"
"")
        self.ScrollBar_4.setOrientation(QtCore.Qt.Vertical)
        self.ScrollBar_4.setObjectName("ScrollBar_4")"""
        self.groupBox = QtWidgets.QGroupBox(self.page_4)
        self.groupBox.setGeometry(QtCore.QRect(100, 40, 431, 341))
        self.groupBox.setTitle('')
        self.groupBox.setStyleSheet("border: 0px solid;\n"
                                    "background-color:rgba(0,0,0,0);\n")
        self.groupBox.setObjectName("groupBox")

        """self.figure_1=plt.figure(facecolor='white')
        self.canvas=FigureCanvas(self.figure_1)
        self.canvas=self.verticalLayout.addWidget(self.canvas)"""


        self.back_4 = QtWidgets.QPushButton(self.page_4)
        self.back_4.setGeometry(QtCore.QRect(20, 150, 80, 80))
        self.back_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.back_4.setStyleSheet("image: url(:/pic/resource/dog-bone.png);\n"
"background-color: transparent;\n"
"font: 15pt \"HGDY_CNKI\";\n"
"color: rgb(255, 255, 255);")
        self.back_4.setCheckable(True)
        self.back_4.setAutoExclusive(True)
        self.back_4.setObjectName("back_4")

        self.next_4 = QtWidgets.QPushButton(self.page_4)
        self.next_4.setGeometry(QtCore.QRect(530, 150, 80, 80))
        self.next_4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.next_4.setStyleSheet("image: url(:/pic/resource/dog-bone.png);\n"
"background-color: transparent;\n"
"font: 15pt \"HGDY_CNKI\";\n"
"color: rgb(255, 255, 255);")
        self.next_4.setCheckable(True)
        self.next_4.setAutoExclusive(True)
        self.next_4.setObjectName("next_4")

        self.label_6 = QtWidgets.QLabel(self.page_4)
        self.label_6.setGeometry(QtCore.QRect(530, 320, 71, 51))
        self.label_6.setStyleSheet("image: url(:/pic/resource/19440-200.png);")
        self.label_6.setText("")
        self.label_6.setObjectName("label_6")
        self.stackedWidget.addWidget(self.page_4)


        # 第五页布局设置
        self.page_5 = QtWidgets.QWidget()
        self.page_5.setStyleSheet("#page_5{\n"
"    background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.537, fx:0.5, fy:0.494, stop:0.253731 rgba(255, 111, 157, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-left:1px solid lightgray;\n"
"border-right:1px solid lightgray;\n"
"border-bottom:1px solid lightgray;\n"
"border-bottom-left-radius: 20px;\n"
"border-bottom-right-radius: 20px;}")
        self.page_5.setObjectName("page_5")

        self.back_5 = QtWidgets.QPushButton(self.page_5)
        self.back_5.setGeometry(QtCore.QRect(20, 150, 80, 80))
        self.back_5.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.back_5.setStyleSheet("image: url(:/pic/resource/dog-bone.png);\n"
"background-color: transparent;\n"
"font: 15pt \"HGDY_CNKI\";\n"
"color: rgb(255, 255, 255);")
        self.back_5.setCheckable(True)
        self.back_5.setAutoExclusive(True)
        self.back_5.setObjectName("back_5")

        self.next_5 = QtWidgets.QPushButton(self.page_5)
        self.next_5.setGeometry(QtCore.QRect(530, 150, 80, 80))
        self.next_5.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.next_5.setStyleSheet("image: url(:/pic/resource/dog-bone.png);\n"
"background-color: transparent;\n"
"font: 15pt \"HGDY_CNKI\";\n"
"color: rgb(255, 255, 255);")
        self.next_5.setCheckable(True)
        self.next_5.setAutoExclusive(True)
        self.next_5.setObjectName("next_5")

        # 保存为.MIDI文件
        self.SaveM = QtWidgets.QCommandLinkButton(self.page_5)
        self.SaveM.setGeometry(QtCore.QRect(190, 160, 250, 70))
        self.SaveM.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SaveM.setStyleSheet("#SaveM{font: 25pt \"华光中圆_CNKI\";}\n"
"#SaveM:hover{\n"
"    font: 25pt \"华光中圆_CNKI\";\n"
"    text-decoration: underline;}\n"
"")
        self.SaveM.setObjectName("SaveM")

        self.lable_5 = QtWidgets.QLabel(self.page_5)
        self.lable_5.setGeometry(QtCore.QRect(60, 60, 81, 21))
        self.lable_5.setStyleSheet("color: rgb(67, 67, 67);\n"
"font: 11pt \"华光淡古印_CNKI\";")
        self.lable_5.setObjectName("lable_5")

        ##保存成功按钮（选择完路径保存后再弹出）
        self.sign_7 = QtWidgets.QLabel(self.page_5)
        self.sign_7.setGeometry(QtCore.QRect(285, 270, 61, 51))
        self.sign_7.setStyleSheet("image: url(:/pic/resource/checkmark.png);")
        self.sign_7.setText("")
        self.sign_7.setObjectName("sign_7")
        self.stackedWidget.addWidget(self.page_5)


        # 第六页布局设置
        self.page_6 = QtWidgets.QWidget()
        self.page_6.setStyleSheet("#page_6{\n"
"    background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.537, fx:0.5, fy:0.494, stop:0.253731 rgba(255, 111, 157, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-left:1px solid lightgray;\n"
"border-right:1px solid lightgray;\n"
"border-bottom:1px solid lightgray;\n"
"border-bottom-left-radius: 20px;\n"
"border-bottom-right-radius: 20px;}")
        self.page_6.setObjectName("page_6")

        ##播放/暂停键
        # 3个style，鼠标悬停和按下播放为第二个，再次点击暂停播放为第三个，后续播放/暂停切换为第二个和第三个切换
        self.play_pause = QtWidgets.QPushButton(self.page_6)
        self.play_pause.setGeometry(QtCore.QRect(240, 120, 161, 131))
        font = QtGui.QFont()
        font.setFamily("Segoe Print")
        font.setPointSize(20)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.play_pause.setFont(font)
        self.play_pause.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.play_pause.setStyleSheet("#play_pause\n"
"{   \n"
"    \n"
"    image: url(:/pic/resource/pet-commands-summon.png);\n"
"background:transparent;\n"
"font: 75 20pt \"Segoe Print\";\n"
"color: rgb(255, 255, 127);\n"
"}\n"
"#play_pause:hover\n"
"{\n"
"    \n"
"    image: url(:/pic/resource/listening-skin-type-1.png);\n"
"    background:transparent;\n"
"    text:none;\n"
"}\n"
"\n"
"#play_pause:checked\n"
"{\n"
"    image:url(:/pic/resource/stop-gesture (1).png);"
"}")
        self.play_pause.setCheckable(True)
        self.play_pause.setChecked(False)
        self.play_pause.setAutoRepeat(True)
        self.play_pause.setDefault(False)
        self.play_pause.setFlat(False)
        self.play_pause.setObjectName("play_pause")

        self.back_6 = QtWidgets.QPushButton(self.page_6)
        self.back_6.setGeometry(QtCore.QRect(20, 150, 80, 80))
        self.back_6.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.back_6.setStyleSheet("image: url(:/pic/resource/dog-bone.png);\n"
"background-color: transparent;\n"
"font: 15pt \"HGDY_CNKI\";\n"
"color: rgb(255, 255, 255);")
        self.back_6.setCheckable(True)
        self.back_6.setChecked(False)
        self.back_6.setAutoExclusive(True)
        self.back_6.setObjectName("back_6")

        # 制作流程结束，返回首页按钮
        self.BackHome_2 = QtWidgets.QPushButton(self.page_6)
        self.BackHome_2.setGeometry(QtCore.QRect(529, 150, 81, 80))
        self.BackHome_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.BackHome_2.setStyleSheet("image: url(:/pic/resource/dog-bowl.png);\n"
"background-color: transparent;\n"
"font: 15pt \"HGDY_CNKI\";\n"
"color: rgb(255, 255, 255);")
        self.BackHome_2.setCheckable(True)
        self.BackHome_2.setAutoRepeat(False)
        self.BackHome_2.setAutoExclusive(True)
        self.BackHome_2.setObjectName("BackHome_2")

        ##音乐播放进度条
        """self.progressBar = QtWidgets.QProgressBar(self.page_6)
        self.progressBar.setGeometry(QtCore.QRect(100, 305, 430, 31))
        self.progressBar.setStyleSheet("#progressBar{\n"
"        border: 4px solid rgb(255, 255, 255);\n"
"        color:rgb(255, 85, 127);\n"
"        text-align: center;\n"
"        font: 10pt \"HGDY_CNKI\";\n"
"        background:white;\n"
"        border-radius:10px;\n"
"    \n"
"}\n"
"#progressBar::chunk {\n"
"        border: none;\n"
"    background-color: qlineargradient(spread:reflect, x1:0.886, y1:1, x2:1, y2:0.8405, stop:0.079602 rgba(249, 249, 249, 255), stop:1 rgba(255, 255, 0, 255));\n"
" border-radius:10px;}")
        self.progressBar.setProperty("value", 24)
        self.progressBar.setObjectName("progressBar")"""

        #gkx
        """self.horizontalSlider = QtWidgets.QSlider(self.page_6)
        self.horizontalSlider.setGeometry(QtCore.QRect(100, 305, 430, 31))
        self.horizontalSlider.setStyleSheet("#horizontalSlider{\n"
                                            "        border: 4px solid rgb(255, 255, 255);\n"
                                            "        color:rgb(255, 85, 127);\n"
                                            "        text-align: center;\n"
                                            "        font: 10pt \"HGDY_CNKI\";\n"
                                            "        background:white;\n"
                                            "        border-radius:10px;\n"
                                            "    \n"
                                            "}\n"
                                            "#horizontalSlider::groove{\n"
                                            "        background:rgb(0,0,0);\n"
                                            "}\n"
                                            "#horizontalSlider::handle{\n"
                                            "         height: 16px;\n"
                                            "         width: 16px;\n"
                                            "         border-image:url(:/pic/resource/music--v2.gif)        \n"
                                            "}\n"
                                            "#horizontalSlider::add-page{\n"
                                            "         background-color: rgb(255, 85, 127);\n"
                                            "}\n"
                                            "#horizontalSlider::sub-page{\n"
                                            "         background-color:qlineargradient(spread:reflect, x1:0.886, y1:1, x2:1, y2:0.8405, stop:0.079602 rgba(249, 249, 249, 255), stop:1 rgba(255, 255, 0, 255));\n"
                                            "}")
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setObjectName("horizontalSlider")"""
        self.stackedWidget.addWidget(self.page_6)


        # 工具页（单独成页，不和其他页呈连续逻辑关系，在首页的工具按钮信号发出下跳转到此页）
        self.tool_page = QtWidgets.QWidget()
        self.tool_page.setStyleSheet("#tool_page{\n"
"    background-color: qradialgradient(spread:pad, cx:0.5, cy:0.5, radius:0.537, fx:0.5, fy:0.494, stop:0.253731 rgba(255, 111, 157, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-left:1px solid lightgray;\n"
"border-right:1px solid lightgray;\n"
"border-bottom:1px solid lightgray;\n"
"border-bottom-left-radius: 20px;\n"
"border-bottom-right-radius: 20px;}")
        self.tool_page.setObjectName("tool_page")

        # 选择要处理的TXT文件
        self.PBun_71 = QtWidgets.QPushButton(self.tool_page)
        self.PBun_71.setGeometry(QtCore.QRect(360, 30, 65, 31))
        self.PBun_71.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.PBun_71.setStyleSheet("image: url(:/pic/resource/search--v1.png);\n"
"image-position: left;\n"
"padding-top: 2px;\n"
"color: rgb(67, 67, 67);\n"
"font: 11pt \"华光淡古印_CNKI\";\n"
"background:transparent;\n"
"text-align:right;")
        self.PBun_71.setCheckable(True)
        self.PBun_71.setAutoExclusive(True)
        self.PBun_71.setObjectName("PBun_71")

        # TXT转MIDI
        self.lable_7 = QtWidgets.QLabel(self.tool_page)
        self.lable_7.setGeometry(QtCore.QRect(20, 40, 100, 16))
        self.lable_7.setStyleSheet("color: rgb(67, 67, 67);\n"
"font: 11pt \"华光淡古印_CNKI\";")
        self.lable_7.setObjectName("lable_7")

        # 路径显示
        self.Browser_71 = QtWidgets.QTextBrowser(self.tool_page)
        self.Browser_71.setGeometry(QtCore.QRect(120, 30, 221, 31))
        self.Browser_71.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.ForbiddenCursor))
        self.Browser_71.setObjectName("Browser_71")

        # MIDI转TXT
        self.lable_8 = QtWidgets.QLabel(self.tool_page)
        self.lable_8.setGeometry(QtCore.QRect(20, 150, 100, 16))
        self.lable_8.setStyleSheet("color: rgb(67, 67, 67);\n"
"font: 11pt \"华光淡古印_CNKI\";")
        self.lable_8.setObjectName("lable_8")

        # 曲目变速
        self.lable_9 = QtWidgets.QLabel(self.tool_page)
        self.lable_9.setGeometry(QtCore.QRect(20, 260, 100, 16))
        self.lable_9.setStyleSheet("color: rgb(67, 67, 67);\n"
"font: 11pt \"华光淡古印_CNKI\";")
        self.lable_9.setObjectName("lable_9")

        # 选择MIDI文件保存路径
        self.PBun_72 = QtWidgets.QPushButton(self.tool_page)
        self.PBun_72.setGeometry(QtCore.QRect(360, 70, 65, 31))
        self.PBun_72.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.PBun_72.setStyleSheet("image: url(:/pic/resource/search--v1.png);\n"
"image-position: left;\n"
"padding-top: 2px;\n"
"color: rgb(67, 67, 67);\n"
"font: 11pt \"华光淡古印_CNKI\";\n"
"background:transparent;\n"
"text-align:right;")
        self.PBun_72.setCheckable(True)
        self.PBun_72.setAutoExclusive(True)
        self.PBun_72.setObjectName("PBun_72")

        # 路径显示
        self.Browser_72 = QtWidgets.QTextBrowser(self.tool_page)
        self.Browser_72.setGeometry(QtCore.QRect(120, 70, 221, 31))
        self.Browser_72.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.ForbiddenCursor))
        self.Browser_72.setObjectName("Browser_72")

        # 格式转换按钮
        self.transform_7 = QtWidgets.QPushButton(self.tool_page)
        self.transform_7.setGeometry(QtCore.QRect(440, 70, 65, 31))
        self.transform_7.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.transform_7.setStyleSheet("image: url(:/pic/resource/music-library.png);\n"
"image-position: left;\n"
"padding-top: 2px;\n"
"text-align:right;\n"
"background:transparent;\n"
"color: rgb(67, 67, 67);\n"
"font: 11pt \"华光淡古印_CNKI\";\n"
"")
        self.transform_7.setCheckable(True)
        self.transform_7.setAutoExclusive(True)
        self.transform_7.setObjectName("transform_7")

        self.transform_8 = QtWidgets.QPushButton(self.tool_page)
        self.transform_8.setGeometry(QtCore.QRect(440, 180, 65, 31))
        self.transform_8.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.transform_8.setStyleSheet("image: url(:/pic/resource/music-library.png);\n"
"image-position: left;\n"
"padding-top: 2px;\n"
"text-align:right;\n"
"background:transparent;\n"
"color: rgb(67, 67, 67);\n"
"font: 11pt \"华光淡古印_CNKI\";\n"
"")
        self.transform_8.setCheckable(True)
        self.transform_8.setAutoExclusive(True)
        self.transform_8.setObjectName("transform_8")

        # 选择要处理的MIDI文件
        self.PBun_81 = QtWidgets.QPushButton(self.tool_page)
        self.PBun_81.setGeometry(QtCore.QRect(360, 140, 65, 31))
        self.PBun_81.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.PBun_81.setStyleSheet("image: url(:/pic/resource/search--v1.png);\n"
"image-position: left;\n"
"padding-top: 2px;\n"
"color: rgb(67, 67, 67);\n"
"font: 11pt \"华光淡古印_CNKI\";\n"
"background:transparent;\n"
"text-align:right;")
        self.PBun_81.setCheckable(True)
        self.PBun_81.setAutoExclusive(True)
        self.PBun_81.setObjectName("PBun_81")

        # 选择TXT文件保存路径
        self.PBun_82 = QtWidgets.QPushButton(self.tool_page)
        self.PBun_82.setGeometry(QtCore.QRect(360, 180, 65, 31))
        self.PBun_82.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.PBun_82.setStyleSheet("image: url(:/pic/resource/search--v1.png);\n"
"image-position: left;\n"
"padding-top: 2px;\n"
"color: rgb(67, 67, 67);\n"
"font: 11pt \"华光淡古印_CNKI\";\n"
"background:transparent;\n"
"text-align:right;")
        self.PBun_82.setCheckable(True)
        self.PBun_82.setAutoExclusive(True)
        self.PBun_82.setObjectName("PBun_82")

        # 路径显示
        self.Browser_81 = QtWidgets.QTextBrowser(self.tool_page)
        self.Browser_81.setGeometry(QtCore.QRect(120, 140, 221, 31))
        self.Browser_81.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.ForbiddenCursor))
        self.Browser_81.setObjectName("Browser_81")
        self.Browser_82 = QtWidgets.QTextBrowser(self.tool_page)
        self.Browser_82.setGeometry(QtCore.QRect(120, 180, 221, 31))
        self.Browser_82.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.ForbiddenCursor))
        self.Browser_82.setObjectName("Browser_82")
        self.line = QtWidgets.QFrame(self.tool_page)

        self.line.setGeometry(QtCore.QRect(20, 40, 591, 161))
        self.line.setStyleSheet("")
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.line_2 = QtWidgets.QFrame(self.tool_page)
        self.line_2.setGeometry(QtCore.QRect(20, 150, 591, 161))
        self.line_2.setStyleSheet("")
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")

        # 选择要变速的MIDI文件
        self.PBun_91 = QtWidgets.QPushButton(self.tool_page)
        self.PBun_91.setGeometry(QtCore.QRect(360, 250, 65, 31))
        self.PBun_91.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.PBun_91.setStyleSheet("image: url(:/pic/resource/search--v1.png);\n"
"image-position: left;\n"
"padding-top: 2px;\n"
"color: rgb(67, 67, 67);\n"
"font: 11pt \"华光淡古印_CNKI\";\n"
"background:transparent;\n"
"text-align:right;")
        self.PBun_91.setCheckable(True)
        self.PBun_91.setAutoExclusive(True)
        self.PBun_91.setObjectName("PBun_91")

        # 路径显示
        self.Browser_91 = QtWidgets.QTextBrowser(self.tool_page)
        self.Browser_91.setGeometry(QtCore.QRect(120, 250, 221, 31))
        self.Browser_91.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.ForbiddenCursor))
        self.Browser_91.setObjectName("Browser_91")

        # 调速按钮
        self.transform_10 = QtWidgets.QPushButton(self.tool_page)
        self.transform_10.setGeometry(QtCore.QRect(540, 290, 65, 31))
        self.transform_10.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.transform_10.setStyleSheet("image: url(:/pic/resource/edit.png);\n"
"image-position: left;\n"
"padding-top: 2px;\n"
"text-align:right;\n"
"background:transparent;\n"
"color: rgb(67, 67, 67);\n"
"font: 11pt \"华光淡古印_CNKI\";\n"
"")
        self.transform_10.setCheckable(True)
        self.transform_10.setAutoExclusive(True)
        self.transform_10.setObjectName("transform_10")

        # 用户速度自定义
        self.Edit_10 = QtWidgets.QLineEdit(self.tool_page)
        self.Edit_10.setGeometry(QtCore.QRect(480, 290, 51, 31))
        self.Edit_10.setStyleSheet("")
        self.Edit_10.setText("")
        self.Edit_10.setObjectName("Edit_10")
        self.lable_10 = QtWidgets.QLabel(self.tool_page)
        self.lable_10.setGeometry(QtCore.QRect(440, 295, 41, 21))
        self.lable_10.setStyleSheet("color: rgb(67, 67, 67);\n"
"font: 11pt \"华光淡古印_CNKI\";\n"
"")
        self.lable_10.setObjectName("lable_10")

        # 选择变速后的MIDI文件保存路径
        self.PBun_92 = QtWidgets.QPushButton(self.tool_page)
        self.PBun_92.setGeometry(QtCore.QRect(360, 290, 65, 31))
        self.PBun_92.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.PBun_92.setStyleSheet("image: url(:/pic/resource/search--v1.png);\n"
"image-position: left;\n"
"padding-top: 2px;\n"
"color: rgb(67, 67, 67);\n"
"font: 11pt \"华光淡古印_CNKI\";\n"
"background:transparent;\n"
"text-align:right;")
        self.PBun_92.setCheckable(True)
        self.PBun_92.setAutoExclusive(True)
        self.PBun_92.setObjectName("PBun_92")

        # 路径显示
        self.Browser_92 = QtWidgets.QTextBrowser(self.tool_page)
        self.Browser_92.setGeometry(QtCore.QRect(120, 290, 221, 31))
        self.Browser_92.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.ForbiddenCursor))
        self.Browser_92.setObjectName("Browser_92")

        # 返回首页
        self.BackHome_3 = QtWidgets.QPushButton(self.tool_page)
        self.BackHome_3.setGeometry(QtCore.QRect(510, 325, 90, 71))
        self.BackHome_3.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.BackHome_3.setStyleSheet("image: url(:/pic/resource/dog-bowl.png);\n"
"background:transparent;\n"
"font: 13pt \"华光淡古印_CNKI\";\n"
"color: rgb(67, 67, 67);\n"
"text-align:top;")
        self.BackHome_3.setCheckable(True)
        self.BackHome_3.setAutoExclusive(True)
        self.BackHome_3.setObjectName("BackHome_3")


        self.line_2.raise_()
        self.line.raise_()
        self.PBun_71.raise_()
        self.lable_7.raise_()
        self.Browser_71.raise_()
        self.lable_8.raise_()
        self.lable_9.raise_()
        self.PBun_72.raise_()
        self.Browser_72.raise_()
        self.transform_7.raise_()
        self.transform_8.raise_()
        self.PBun_81.raise_()
        self.PBun_82.raise_()
        self.Browser_81.raise_()
        self.Browser_82.raise_()
        self.PBun_91.raise_()
        self.Browser_91.raise_()
        self.transform_10.raise_()
        self.Edit_10.raise_()
        self.lable_10.raise_()
        self.PBun_92.raise_()
        self.Browser_92.raise_()
        self.BackHome_3.raise_()
        self.stackedWidget.addWidget(self.tool_page)

        self.retranslateUi(Form)

        self.stackedWidget.setCurrentIndex(0)##指定每次初始化首页显示在前
        QtCore.QMetaObject.connectSlotsByName(Form)

    ##文本内容提示框等设置
    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.Start.setText(_translate("Form", "MIDI G  !"))
        self.Tool.setText(_translate("Form", "更多..."))
        self.label_5.setText(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">点我开始</p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">👇</p></body></html>"))
        self.label_1.setText(_translate("Form", "为您的曲子创建第一个音符吧！"))
        self.next_1.setText(_translate("Form", "NEXT"))
        self.BackHome.setText(_translate("Form", "HOME"))
        self.label_2.setText(_translate("Form", "为您生成后续音符"))
        self.back_2.setText(_translate("Form", "BACK"))
        self.next_2.setText(_translate("Form", "NEXT"))
        self.SaveT.setToolTip(_translate("Form", "<html><head/><body><p><br/></p></body></html>"))
        self.SaveT.setText(_translate("Form", "保存为.TXT"))
        self.label_3.setText(_translate("Form", "保存文件"))
        self.next_3.setText(_translate("Form", "NEXT"))
        self.back_3.setText(_translate("Form", "BACK"))
        self.lable_4.setText(_translate("Form", "对本次作曲成果进行评价"))
        self.back_4.setText(_translate("Form", "BACK"))
        self.next_4.setText(_translate("Form", "NEXT"))
        self.back_5.setText(_translate("Form", "BACK"))
        self.next_5.setText(_translate("Form", "NEXT"))
        self.SaveM.setText(_translate("Form", "保存为.MIDI"))
        self.lable_5.setText(_translate("Form", "保存文件"))
        self.play_pause.setText(_translate("Form", "GO! "))
        self.back_6.setText(_translate("Form", "BACK"))
        self.BackHome_2.setText(_translate("Form", "HOME"))
        self.PBun_71.setText(_translate("Form", "     浏览"))
        self.lable_7.setText(_translate("Form", "TXT转MIDI"))
        self.Browser_71.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">请选择要处理的TXT文件...</span></p></body></html>"))
        self.lable_8.setText(_translate("Form", "MIDI转TXT"))
        self.lable_9.setText(_translate("Form", "曲目变速"))
        self.PBun_72.setText(_translate("Form", "浏览"))
        self.Browser_72.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">请选择MIDI文件保存路径...</span></p></body></html>"))
        self.transform_7.setText(_translate("Form", "转换"))
        self.transform_8.setText(_translate("Form", "转换"))
        self.PBun_81.setText(_translate("Form", "浏览"))
        self.PBun_82.setText(_translate("Form", "浏览"))
        self.Browser_81.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">请选择要处理的MIDI文件...</span></p></body></html>"))
        self.Browser_82.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">请选择TXT文件保存路径...</span></p></body></html>"))
        self.PBun_91.setText(_translate("Form", "浏览"))
        self.Browser_91.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">请选择要处理的MIDI文件...</span></p></body></html>"))
        self.transform_10.setText(_translate("Form", "调速"))
        self.lable_10.setText(_translate("Form", "速度"))
        self.PBun_92.setText(_translate("Form", "浏览"))
        self.Browser_92.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">请选择保存路径...</span></p></body></html>"))
        self.BackHome_3.setText(_translate("Form", "Home"))
import testUI_rc
